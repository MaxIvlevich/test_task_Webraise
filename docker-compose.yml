services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: user-subscription-service-app
    container_name: user-subscription-service
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/user_subscription_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_LIQUIBASE_ENABLED=true
      - SPRING_LIQUIRSA_CHANGE_LOG=classpath:db/changelog/db.changelog-master.yaml
    networks:
      - app-network
  db:
    image: postgres:16-alpine
    container_name: user-subscription-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_subscription_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d user_subscription_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: